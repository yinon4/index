---
import type { Link } from "../types";

export interface Props {
  links?: Link[];
}

const { links } = Astro.props;

const path = Astro.url.pathname.replace(/\/$/, "");
let backref = path.split("/").slice(0, -1).join("/");

const isHome = path === import.meta.env.BASE_URL;
---

<nav>
  {!isHome && <a href={backref}>‚Üê back</a>}
  {
    links.length !== 0 && (
      <div class="links">
        {links.map((link) => (
          <a href={link.href}>{link.text}</a>
        ))}
      </div>
    )
  }
</nav>
<style>
  a:hover {
    text-decoration: wavy underline;
  }
  nav {
    user-select: none;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding-bottom: 2rem;
  }
  div.links {
    flex-grow: 1;
    display: flex;
    justify-content: flex-end;
    gap: 2rem;
    flex-wrap: wrap;
  }
  div:not(.links) {
    justify-content: flex-start;
  }
</style>
